import java.nio.file.Paths
import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

repositories {
    mavenCentral()
    google()
}

configurations {
    compile.exclude module: 'support-v4'
}

configurations.all {
    exclude group: 'com.google.firebase', module: 'firebase-core'
    exclude group: 'androidx.recyclerview', module: 'recyclerview'
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim().substring(0, 8)
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.5'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.sharetarget:sharetarget:1.2.0"

    compileOnly 'org.checkerframework:checker-qual:3.25.0'
    compileOnly 'org.checkerframework:checker-compat-qual:2.5.5'

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:31.0.1')
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-datatransport'
    implementation 'com.google.firebase:firebase-appindexing:20.0.0'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //Google services
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-auth:20.3.0'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'com.google.android.gms:play-services-wearable:18.0.0'
    implementation 'com.google.android.gms:play-services-location:21.0.0' // New version (21.0.0) has changes in GoogleLocationProvider.java
    implementation 'com.google.android.gms:play-services-wallet:19.1.0'
    implementation 'com.googlecode.mp4parser:isoparser:1.0.6'
    implementation 'com.stripe:stripe-android:2.0.2'
    implementation 'com.google.mlkit:language-id:17.0.4'
    implementation "com.android.billingclient:billing:5.0.0"
    implementation 'com.google.code.gson:gson:2.10'

    //Cherrygram
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'com.google.android.material:material:1.7.0-rc01'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.9'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.10'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'com.jakewharton:process-phoenix:2.1.2'
    implementation 'com.facebook.rebound:rebound:0.3.8'

    // CameraX Implementation
    implementation "androidx.camera:camera-core:1.2.0-rc01"
    implementation "androidx.camera:camera-camera2:1.2.0-rc01"
    implementation "androidx.camera:camera-lifecycle:1.2.0-rc01"
    implementation "androidx.camera:camera-view:1.2.0-rc01"
    implementation "androidx.camera:camera-extensions:1.2.0-rc01"
    implementation 'androidx.interpolator:interpolator:1.0.0'

    // Microsoft Analytics
    def appCenterSdkVersion = '4.4.5'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}

def isWindows = String.valueOf(DefaultNativePlatform.currentOperatingSystem.toFamilyName() == OperatingSystemFamily.WINDOWS)
android {
    kotlinOptions {
        jvmTarget = '11'
    }

    sourceSets.main.jniLibs.srcDirs = ['./jni/']

    signingConfigs {
        debug {
            storeFile file('../Cherrygram-Dev.jks')
            storePassword 'ars1390'
            keyAlias 'key0'
            keyPassword 'ars1390'
        }

        release {
            storeFile file('../Cherrygram.jks')
            storePassword 'ars1390'
            keyAlias 'key0'
            keyPassword 'ars1390'
        }
    }

    externalNativeBuild {
        cmake {
            path 'jni/CMakeLists.txt'
        }
    }

    sourceSets.main {
        res.srcDirs = [
                'src/main/res',
                'src/main/res-vkui',
                'src/main/res-tabs'
        ]
    }


    buildTypes {
        debug {
            buildConfigField "boolean", "DEBUG_VERSION", "true"
            buildConfigField "boolean", "DEBUG_PRIVATE_VERSION", "false"
            buildConfigField("long", "VERSION_CODE", "${APP_VERSION_CODE}")
            buildConfigField("String","VERSION_NAME","\"${APP_VERSION_NAME}\"")
            buildConfigField("String","VERSION_NAME_CHERRY","\"${APP_VERSION_CHERRY}\"")
            buildConfigField "boolean", "BUILD_HOST_IS_WINDOWS", isWindows
        }

        release {
            buildConfigField "boolean", "DEBUG_VERSION", "false"
            buildConfigField "boolean", "DEBUG_PRIVATE_VERSION", "false"
            buildConfigField("long", "VERSION_CODE", "${APP_VERSION_CODE}")
            buildConfigField("String","VERSION_NAME","\"${APP_VERSION_NAME}\"")
            buildConfigField("String","VERSION_NAME_CHERRY","\"${APP_VERSION_CHERRY}\"")
            buildConfigField "boolean", "BUILD_HOST_IS_WINDOWS", isWindows
        }
    }

    defaultConfig {
        buildConfigField "String", "GIT_COMMIT_HASH", "\"${getGitHash()}\""
    }
}

def getProps(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName]
    } else {
        return "";
    }
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
