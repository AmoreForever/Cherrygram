apply plugin: 'com.android.application'
apply plugin: 'com.huawei.agconnect'

repositories {
    mavenCentral()
    google()
    maven { url 'https://developer.huawei.com/repo/' }
}

configurations {
    compile.exclude module: 'support-v4'
}

configurations.all {
    exclude group: 'com.google.firebase', module: 'firebase-core'
    exclude group: 'androidx.recyclerview', module: 'recyclerview'
}

dependencies {
    implementation project(':TMessagesProj')
    implementation 'androidx.multidex:multidex:2.0.1'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation files('../TMessagesProj/libs/libgsaverification-client.aar')

    implementation platform('com.google.firebase:firebase-bom:29.1.0')
    implementation 'com.google.firebase:firebase-messaging:23.0.8'

    implementation 'com.huawei.agconnect:agconnect-core:1.6.5.300'
    implementation 'com.huawei.agconnect:agconnect-remoteconfig:1.3.1.300'
    implementation 'com.huawei.hms:push:6.5.0.300'
    implementation 'com.huawei.hms:maps:6.6.0.300'
    implementation 'com.huawei.hms:location:6.4.0.300'
}

ext.abiCodes = ['universal': 0, 'armeabi-v7a': 1, 'arm64-v8a': 5, x86: 2, x86_64: 6]

android {
    defaultConfig.applicationId = APP_PACKAGE

    sourceSets.main.jniLibs.srcDirs = ['../TMessagesProj/jni/']

    signingConfigs {
        debug {
            storeFile file('../Your_Key.jks')
            storePassword 'Your_Password'
            keyAlias 'Your_Alias'
            keyPassword 'Your_Password'
        }

        release {
            storeFile file('../Your_Key.jks')
            storePassword 'Your_Password'
            keyAlias 'Your_Alias'
            keyPassword 'Your_Password'
        }
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            signingConfig signingConfigs.release
            //applicationIdSuffix ".beta"
            minifyEnabled false
            shrinkResources false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../TMessagesProj/proguard-rules.pro'
            ndk.debugSymbolLevel = 'FULL'
        }

        release {
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../TMessagesProj/proguard-rules.pro'
            ndk.debugSymbolLevel = 'FULL'
        }
    }

    sourceSets.debug {
        manifest.srcFile '../TMessagesProj/config/debug/AndroidManifest.xml'
    }

    sourceSets.release {
        manifest.srcFile '../TMessagesProj/config/release/AndroidManifest.xml'
    }

    flavorDimensions "minApi"

    productFlavors {
        afat {
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            }
            sourceSets.debug {
                manifest.srcFile '../TMessagesProj/config/debug/AndroidManifest_SDK23.xml'
            }
            sourceSets.release {
                manifest.srcFile '../TMessagesProj/config/release/AndroidManifest_SDK23.xml'
            }
            ext {
                abiVersionCode = 9
            }
        }
    }

    defaultConfig.versionCode = Integer.parseInt(APP_VERSION_CODE)

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def abi = output.getFilter('ABI')
            if (abi == null) abi = 'universal'
            outputFileName = "Cherrygram-Huawei-${APP_VERSION_CHERRY}-TG-${defaultConfig.versionName}-${abi}.apk"
            def abiVersionCode = project.ext.abiCodes.get(abi)
            output.versionCodeOverride = defaultConfig.versionCode * 10 + abiVersionCode
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        if (variant.buildType.name != "release" && !names.contains("afat")) {
            setIgnore(true)
        }
    }

    buildFeatures {
        buildConfig = true
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    splits.abi {
        enable true
        universalApk true
    }
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
